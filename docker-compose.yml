version: "3.8"

services:
  db:
    image: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s # Tiempo entre chequeos
      timeout: 20s # Tiempo de espera para cada chequeo
      retries: 20 # Número de intentos fallidos permitidos
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Agregar el volumen para el archivo de inicialización
      - ./resources/:/docker-entrypoint-initdb.d/

  backend:
    build:
      context: ./tcg-backend
      dockerfile: ./app/Dockerfile
    image: backend-tcg:latest
    volumes:
      - ./tcg-backend/app:/app
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy

    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - BUCKET_NAME=images

  frontend:
    build:
      context: ./tcg-frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./tcg-frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8080
    depends_on:
      - backend

volumes:
  postgres-data:

